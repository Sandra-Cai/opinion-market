apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-network-policy
  namespace: opinion-market
spec:
  podSelector:
    matchLabels:
      app: opinion-market-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks from kubelet
  - from:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 8000
      path: /health
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  # Allow internal API communication
  - from:
    - namespaceSelector:
        matchLabels:
          name: opinion-market
    ports:
    - protocol: TCP
      port: 8000
  egress:
  # Allow database connections
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow Redis connections
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow Prometheus scraping
  - to:
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
  # Allow external HTTPS traffic for API calls
  - ports:
    - protocol: TCP
      port: 443
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
  # Allow NTP for time synchronization
  - ports:
    - protocol: UDP
      port: 123

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-network-policy
  namespace: opinion-market
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from API pods
  - from:
    - podSelector:
        matchLabels:
          app: opinion-market-api
    ports:
    - protocol: TCP
      port: 5432
  # Allow connections from Celery workers
  - from:
    - podSelector:
        matchLabels:
          app: celery-worker
    ports:
    - protocol: TCP
      port: 5432
  # Allow connections from Celery beat
  - from:
    - podSelector:
        matchLabels:
          app: celery-beat
    ports:
    - protocol: TCP
      port: 5432
  egress:
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
  # Allow NTP for time synchronization
  - ports:
    - protocol: UDP
      port: 123

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: opinion-market
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from API pods
  - from:
    - podSelector:
        matchLabels:
          app: opinion-market-api
    ports:
    - protocol: TCP
      port: 6379
  # Allow connections from Celery workers
  - from:
    - podSelector:
        matchLabels:
          app: celery-worker
    ports:
    - protocol: TCP
      port: 6379
  # Allow connections from Celery beat
  - from:
    - podSelector:
        matchLabels:
          app: celery-beat
    ports:
    - protocol: TCP
      port: 6379
  egress:
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
  # Allow NTP for time synchronization
  - ports:
    - protocol: UDP
      port: 123

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prometheus-network-policy
  namespace: opinion-market
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow access from Grafana
  - from:
    - podSelector:
        matchLabels:
          app: grafana
    ports:
    - protocol: TCP
      port: 9090
  # Allow access from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow scraping of API pods
  - to:
    - podSelector:
        matchLabels:
          app: opinion-market-api
    ports:
    - protocol: TCP
      port: 8000
  # Allow scraping of database
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow scraping of Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow external HTTPS for remote targets
  - ports:
    - protocol: TCP
      port: 443
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: grafana-network-policy
  namespace: opinion-market
spec:
  podSelector:
    matchLabels:
      app: grafana
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow access from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow access to Prometheus
  - to:
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
  # Allow external HTTPS for data sources
  - ports:
    - protocol: TCP
      port: 443
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: celery-worker-network-policy
  namespace: opinion-market
spec:
  podSelector:
    matchLabels:
      app: celery-worker
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow internal communication
  - from:
    - namespaceSelector:
        matchLabels:
          name: opinion-market
  egress:
  # Allow database connections
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow Redis connections
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow external HTTPS for API calls
  - ports:
    - protocol: TCP
      port: 443
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
  # Allow NTP for time synchronization
  - ports:
    - protocol: UDP
      port: 123

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: celery-beat-network-policy
  namespace: opinion-market
spec:
  podSelector:
    matchLabels:
      app: celery-beat
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow internal communication
  - from:
    - namespaceSelector:
        matchLabels:
          name: opinion-market
  egress:
  # Allow database connections
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow Redis connections
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow external HTTPS for API calls
  - ports:
    - protocol: TCP
      port: 443
  # Allow DNS resolution
  - ports:
    - protocol: UDP
      port: 53
  # Allow NTP for time synchronization
  - ports:
    - protocol: UDP
      port: 123

---
# Default deny all policy for the namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: opinion-market
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  # This policy denies all traffic by default
  # Other policies will allow specific traffic
